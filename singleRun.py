# sigleRun.py --- 
# 
# Filename: sigleRun.py
# Description:
#          Run a sigle simulation and plot
#        population distribution 
# 
# Author:    Yu Lu
# Email:     yulu@utexas.edu
# Github:    https://github.com/SuperYuLu 
# 
# Created: Mon Oct  9 10:28:14 2017 (-0500)
# Version: V1.0
# Last-Updated: Mon Oct  9 19:27:08 2017 (-0500)
#           By: superlu
#     Update #: 66
# 


import sys, select 
from plot import plotPop
from functions import readInput, runSimu, findSteadyState, nicePrintStates

def main(args = ''):
    """
    Run single fix parameter simultion
    simulation parameters should be specified in singleRun.in
    Usually takes about half minute, be patient
    plots will be generated by the end
    """
    

    if args:
        inputParams = readInput(args)
    else:
        inputParams = readInput("./singleRun.in")
        
    clock, popG, popE = runSimu(**inputParams)
    params = {
        "clock": clock,
        "Dline":inputParams.get('Dline'),
        "eStates": [inputParams.get('excited_hpf_state')],
        "polorization1": inputParams.get('polorization1'),
        "polorization2": inputParams.get('polorization2'),
        "I1": inputParams.get('I1'),
        "I2": inputParams.get('I2'),
        "popG": popG,
        "popE": popE,
        "saveFig": True}

    t, steadyG, steadE = findSteadyState(clock, popG, popE)
    if t == 0:
        print("\nNo steady state reached, extend the simulation time\nif you want to see it saturates\n")
    else:
        print("\nTime for reaching steady state: {:2.2f} us\n".format(t * 1e6))
        nicePrintStates(steadyG)

    plotPop(**params)
    

if __name__ == '__main__':
    infile, _, _ = select.select([sys.stdin], [], [], 3)
    if infile:
        main(sys.stdin)
    else:
        main()
