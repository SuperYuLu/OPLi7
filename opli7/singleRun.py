# sigleRun.py --- 
# 
# Filename: sigleRun.py
# Description:
#          Run a sigle simulation and plot
#        population distribution 
# 
# Author:    Yu Lu
# Email:     yulu@utexas.edu
# Github:    https://github.com/SuperYuLu 
# 
# Created: Mon Oct  9 10:28:14 2017 (-0500)
# Version: V1.0
# Last-Updated: Sun Oct 15 23:35:09 2017 (-0500)
#           By: yulu
#     Update #: 95
# 

import sys
from plot import plotPop
from functions import readInput, runSimu, nicePrintStates

def main(inFile):
    """
    Run single fix parameter simultion
    simulation parameters should be specified in singleRun.in
    Usually takes about half minute, be patient
    plots will be generated by the end
    """
    
    # load input parameters 
    inputParams = readInput(inFile)
    
    clock, popG, popE, steadyIdx  = runSimu(**inputParams)
    
    params = {
        "clock": clock,
        "Dline":inputParams.get('Dline'),
        "eStates": [inputParams.get('excited_hpf_state')],
        "polarization1": inputParams.get('polarization1'),
        "polarization2": inputParams.get('polarization2'),
        "I1": inputParams.get('I1'),
        "I2": inputParams.get('I2'),
        "popG": popG,
        "popE": popE,
        "saveFig": True}

    
    if steadyIdx:
        print("\nTime for reaching steady state: {:2.2f} us\n".format(clock[steadyIdx] * 1e6))
        steadyG = {'F1': popG['F1'][steadyIdx],
                   'F2': popG['F2'][steadyIdx]}
        nicePrintStates(steadyG)
    else:
        print("\nNo steady state reached, extend the simulation time\nif you want to see it saturates\n")

    plotPop(**params)
    
    

if __name__ == '__main__':
    main(sys.stdin)
    #infile, _, _ = select.select([sys.stdin], [], [], 3)
    #if infile:
    #    
    #else:
    #    main()
